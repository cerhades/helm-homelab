# Default values for common-library.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

appName: my-app

nameOverride: ""

fullnameOverride: ""

######## POD LEVEL CONFIG ################

replicaCount: 1

revisionHistoryLimit: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

podAnnotations: {}

podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

nodeSelector: {}

tolerations: []

affinity: {}

######## CONTAINER CONFIGS ################
imagePullSecrets: []

image:
  repository: my-app-image-repo
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "" # latest, 2.2.2, etc

args: []

env:
- name: TZ
  value: America/Los_Angeles
- name: PUID
  value: "1000"
- name: PGID
  value: "1000"

ports:
  containerPort: 80

readinessProbe:
  tcpSocket:
    port: 80
  failureThreshold: 12
  periodSeconds: 10

livenessProbe:
  tcpSocket:
    port: 80
  failureThreshold: 3
  periodSeconds: 10
  initialDelaySeconds: 10

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # allowPrivilegeEscalation: false
  # readOnlyRootFilesystem: false

######## SERVICE AND INGRESS ################

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


service:
  main:
    enabled: true
    type: ClusterIP
    port: 80
    protocol: TCP
    targetPort: 80

additionalServices:
  svc2:
    enabled: false
    type: LoadBalancer
    port: 3000
    protocol: TCP
    targetPort: 3000

  svc3:
    enabled: false
    type: NodePort
    nodePort: 30001
    port: 8080
    protocol: TCP
    targetPort: 8080


ingress:
  enabled: false
  className: "" # traefik, nginx, etc
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # traefik.ingress.kubernetes.io/router.middlewares: "your-middleware-here@kubernetescrd"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific # Prefix, etc
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


######## PERSISTENCE & Volumes ################
# Additional volumes on the output Deployment definition.
persistence:
  pvc:
    enabled: false
    name: app-config
    accessMode: ReadWriteOnce
    storageClass: "" # i.e longhorn, rook, etc
    size: 1Gi

nfs:
  server1:
    enabled: false
    name: data-server1
    server: # NFS server address. (ip or FQDN)
    path: /path/to/nfs/share1 # NFS share path
    readOnly: false # Set to true if NFS volume should be mounted in read-only mode

  server2:
    enabled: false
    name: data-server2
    server: # NFS server address. (ip or FQDN)
    path: /path/to/nfs/share2 # NFS share path
    readOnly: false # Set to true if NFS volume should be mounted in read-only mode

  server3:
    enabled: false
    name: data-server3
    server: # NFS server address. (ip or FQDN)
    path: /path/to/nfs/share3 # NFS share path
    readOnly: false # Set to true if NFS volume should be mounted in read-only mode

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

